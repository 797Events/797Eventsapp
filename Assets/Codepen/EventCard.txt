HTML:<h1>Movie Search App</h1>
<div id="app"></div>

<footer>
	<p>
		Created with <i class="fa fa-heart"></i> by
		<a target="_blank" href="https://florin-pop.com">Florin Pop</a>
		- Read
		<a target="_blank" href="https://www.florin-pop.com/blog/2019/02/react-movie-search-app/">how I created it</a>
		- Other projects on
		<a target="_blank" href="https://github.com/florinpop17/work-journal/">
			Github
		</a>
	</p>
</footer>
CSS:@import url('https://fonts.googleapis.com/css?family=Lato');

* {
    box-sizing: border-box;
}

body {
    background-color: #eee;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    font-family: Lato;
    margin-bottom: 100px;
}

#app {
    width: 100%;
    max-width: 768px;
}

form {
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    margin-bottom: 15px;
}

form input {
    border: 2px solid #aaa;
    color: #333;
    font-size: 14px;
    font-family: Lato;
    padding: 10px 15px;
    height: 40px;
    width: 300px;
	max-width: 100%;
}

form button {
    border: 1px solid #aaa;
    background-color: #aaa;
    color: #fff;
    padding: 0 12px;
    height: 40px;
}

form button:focus {
    outline: none;
}

form button:active {
    opacity: 0.7;
}

.movie-card-container {
    background-color: #fff;
    border-radius: 10px;
    -webkit-box-shadow: 0 16px 24px 2px rgba(0, 0, 0, 0.14),
        0 6px 30px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -7px rgba(0, 0, 0, 0.2);
    box-shadow: 0 16px 24px 2px rgba(0, 0, 0, 0.14),
        0 6px 30px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -7px rgba(0, 0, 0, 0.2);
    overflow: hidden;
    display: flex;
    min-height: 420px;
    margin: 0 auto 50px;
}

.image-container {
    -webkit-clip-path: circle(90% at 30px 30px);
    clip-path: circle(90% at 30px 30px);
    flex: 4;
}

.bg-image {
    background-size: cover;
    background-repeat: no-repeat;
    background-position: top left;
    width: 100%;
    height: 100%;
}

.movie-info {
    display: flex;
    flex: 3;
    flex-direction: column;
    align-items: flex-end;
    justify-content: space-between;
    text-align: right;
    padding: 30px 20px 30px 0;
    z-index: 1;
}

.movie-info h2 {
    text-transform: uppercase;
    margin: 0;
    padding: 0 0 10px;
    border-bottom: 2px solid rgba(0, 0, 0, 0.3);
}

.movie-info h1 {
    font-weight: bold;
    font-size: 36px;
    margin: 20px 0 0;
}

.movie-info h4 {
    margin: 20px 0 10px;
}

.movie-info p {
    font-size: 14px;
    margin: 10px 0;
    width: 130%;
}

.movie-info .tags-container {
    position: relative;
    width: 225%;
}

.movie-info .tags-container span {
    border: 2px solid black;
    border-radius: 4px;
    display: inline-block;
    font-size: 12px;
    padding: 3px 10px;
    margin: 5px;
}

footer {
    background-color: #222;
    color: #fff;
    font-size: 14px;
    bottom: 0;
    position: fixed;
    left: 0;
    right: 0;
    text-align: center;
    z-index: 2;
}

footer p {
    margin: 10px 0;
}

footer i {
    color: red;
}

footer a {
    color: #3c97bf;
    text-decoration: none;
}

@media (max-width: 768px) {
    .image-container {
        flex: 5;
    }
}

@media (max-width: 700px) {
    .image-container {
        -webkit-clip-path: circle(80% at 45px 70px);
        clip-path: circle(80% at 45px 70px);
    }
}

@media (max-width: 600px) {
    .movie-card-container {
        flex-direction: column;
    }

    .image-container {
        clip-path: none;
        flex: 1;
        height: 400px;
    }

    .movie-info {
        align-items: flex-start;
        flex: 1;
        text-align: left;
        padding: 30px 20px;
    }

    .movie-info .tags-container,
    .movie-info p {
        width: 100%;
    }
}
JS:class MoviesList extends React.Component {
    state = {
        moviesList: ['tt2294629'],
        searchTerm: ''
    };

    search = event => {
        event.preventDefault();
        axios
            .get(
                `https://www.omdbapi.com/?apikey=756abb2f&s=${
                    this.state.searchTerm
                }&plot=full`
            )
            .then(res => res.data)
            .then(res => {
                if (!res.Search) {
                    this.setState({ moviesList: [] });
                    return;
                }

                const moviesList = res.Search.map(movie => movie.imdbID);
                this.setState({
                    moviesList
                });
            });
    };

    handleChange = event => {
        this.setState({
            searchTerm: event.target.value
        });
    };

    render() {
        const { moviesList } = this.state;

        return (
            <div>
                <form onSubmit={this.search}>
                    <input
                        placeholder="Search for a movie"
                        onChange={this.handleChange}
                    />
                    <button type="submit">
                        <i className="fa fa-search" />
                    </button>
                </form>
                {moviesList.length > 0 ? (
                    moviesList.map(movie => (
                        <MovieCard movieID={movie} key={movie} />
                    ))
                ) : (
                    <p>
                        Couldn't find any movie. Please search again using
                        another search criteria.
                    </p>
                )}
            </div>
        );
    }
}

class MovieCard extends React.Component {
    state = {
        movieData: {}
    };

    componentDidMount() {
        axios
            .get(
                `https://www.omdbapi.com/?apikey=756abb2f&i=${
                    this.props.movieID
                }&plot=full`
            )
            .then(res => res.data)
            .then(res => {
                this.setState({ movieData: res });
            });
    }

    render() {
        const {
            Title,
            Released,
            Genre,
            Plot,
            Poster,
            imdbRating
        } = this.state.movieData;

        if (!Poster || Poster === 'N/A') {
            return null;
        }

        return (
            <div className="movie-card-container">
                <div className="image-container">
                    <div
                        className="bg-image"
                        style={{ backgroundImage: `url(${Poster})` }}
                    />
                </div>
                <div className="movie-info">
                    <h2>Movie Details</h2>
                    <div>
                        <h1>{Title}</h1>
                        <small>Released Date: {Released}</small>
                    </div>
                    <h4>Rating: {imdbRating} / 10</h4>
                    <p>{Plot && Plot.substr(0, 350)}</p>
                    <div className="tags-container">
                        {Genre && Genre.split(', ').map(g => <span>{g}</span>)}
                    </div>
                </div>
            </div>
        );
    }
}

ReactDOM.render(<MoviesList />, document.getElementById('app'));
